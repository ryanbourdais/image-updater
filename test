{'content': 'b\'version: 2.1\\norbs:\\n  flutter: circleci/flutter@2.0.2\\n  android: circleci/android@2.3.0\\n  win: circleci/windows@5.0\\n\\njobs:\\n  flutter-test:\\n    docker:\\n      - image: cimg/android:2023.10.2-ndk\\n    steps:\\n      - checkout\\n      - run: ruby -v\\n      - run: echo \\\'export STR="string"\\\' >> "$BASH_ENV"\\n      - android/run-tests:\\n          max-tries: 1\\n          pre-test-command: "echo $STR"\\n      - flutter/install_sdk:\\n          version: 3.7.3\\n      - run: flutter test -r json > report.json\\n      - run: flutter analyze\\n      - store_artifacts:\\n          path: report.json\\n\\n  flutter-2204-test:\\n    machine:\\n      image: ubuntu-2204:2023.08.1\\n    steps:\\n      - checkout\\n      - run: wget -P ./flank https://github.com/Flank/flank/releases/download/v23.07.0/flank.jar\\n      - run: echo "java -jar flank.jar $@" > ./flank/flank.sh\\n      - run: echo alias flank="\\\'sh ./flank/flank.sh\\\'" >> ${CIRCLECI_HOME}/.circlerc\\n      - run: flank\\n      - android/run-tests:\\n          max-tries: 1\\n          pre-test-command: "echo $STR"\\n      - flutter/install_sdk:\\n          version: 3.7.3\\n      - run: flutter test -r json > report.json\\n      - run: flutter analyze\\n      - store_artifacts:\\n          path: report.json\\n  \\n  flutter-2004-test:\\n    executor: \\n      name: win/server-2022\\n      version: 2023.08.1\\n    steps:\\n      - checkout\\n      - run: echo \\\'export STR="string"\\\' >> "$BASH_ENV"\\n      - android/run-tests:\\n          max-tries: 1\\n          pre-test-command: "echo $STR"\\n      - flutter/install_sdk:\\n          version: 3.7.3\\n      - run: flutter test -r json > report.json\\n      - run: flutter analyze\\n      - store_artifacts:\\n          path: report.json\\n\\n  flutter-build:\\n    machine:\\n      image: android:2023.11.1\\n    steps:\\n      - checkout\\n      - run: wget -P ./flank https://github.com/Flank/flank/releases/download/v23.07.0/flank.jar\\n      - run: echo "java -jar ./flank/flank.jar $@" > ./flank/flank.sh\\n      - run: \\n          name: test flank\\n          command: $flank\\n          environment:\\n            flank: \\\'sh ./flank/flank.sh\\\'\\n      - flutter/install_sdk_and_pub:\\n          version: 3.7.3\\n      # - run: flutter build apk\\n      - android/start-emulator-and-run-tests:\\n          pre-run-tests-steps:\\n            - run: echo "beginning test"\\n          test-command: flutter test\\n          pre-emulator-wait-steps:\\n            - run: echo "waiting for emulator"\\n          post-emulator-wait-steps:\\n            - run: echo "emulator running"\\n          post-emulator-launch-assemble-command: adb pull data .\\n          post-run-tests-steps: \\n            - run: echo "run test done"\\n            - run: mkdir testdata\\n            - run: adb pull storage .\\n          additional-avd-args: "-d pixel_3a -c 1G"\\n          additional-emulator-args: "-memory 4096 -cores 3 -writable-system"\\n      - store_artifacts:\\n          path: build\\n      - store_artifacts:\\n          path: testdata\\n  firebase-cli:\\n    machine:\\n      image: android:2023.08.1\\n    steps:\\n      - checkout\\n      - run: curl -sL https://firebase.tools | bash\\n\\n  windows_env:\\n    machine:\\n      image: \\\'windows-server-2019-vs2019:2023.10.1\\\'\\n      resource_class: windows.medium\\n    steps:\\n      - run: \\n          command: setx testvar "testing1"\\n          shell: powershell.exe\\n      - run: \\n          command: (Get-ChildItem env:)\\n          shell: powershell.exe\\n      - run: \\n          command: SetEnvironmentVariable("testvar2", "testing2", \\\'Machine\\\')\\n          shell: powershell.exe\\n      - run: \\n          command: $env:testvar2\\n          shell: powershell.exe\\n          \\n  verifydefault:\\n    parameters:\\n      xcodev:\\n        type: string\\n    macos:\\n      xcode: << parameters.xcodev >>\\n    resource_class: macos.m1.large.gen1\\n    steps:\\n        - run: xcodebuild -version\\n        \\n  verifydefault_intel:\\n    parameters:\\n      xcodev:\\n        type: string\\n    macos:\\n      xcode: << parameters.xcodev >>\\n    resource_class: macos.x86.medium.gen2\\n    steps:\\n        - run: xcodebuild -version\\n\'', 'sha': 'c5633493b891dc38df816eb35b74b63fbcbee223'}